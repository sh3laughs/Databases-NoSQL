// DSO108 - Databases
	// Lesson 8 - Updating Documents

// Page 7 - Practice Hands-On

// Part 1 - Within your inventory collection, run queries to 
    // accomplish the following:

    // 1. Update the item of journal to have a height of 16.
db.inventory.find({item: 'journal'});
// doc with journal previewed in results pane

db.inventory.updateOne({item: 'journal'},{$set: {'size.h': 16}});
// updated height for journal to be 16, as valudated in 
    // results pane

db.inventory.find({item: 'journal'});
// height updated for relevant doc and previewed in results 
    // pane 
 

    // 2. Update all items with a status of D to have a 
        // quantity of 50.
db.inventory.find({status: 'D'});
// doc's with D status previewed in results pane

db.inventory.updateMany({},{$rename: {qty: 'quantity'}});
db.inventory.find({},{quantity: 1});
// qty renamed to quantity for all relevant doc's and all
    // doc's previewed in results pane

db.inventory.updateMany({status: 'D'},{$set: {quantity: 50}},
    {upsert: true});
// quantity updated for relevant doc's, as validated in  
    // results pane

db.inventory.find({status: 'D'},{status: 1, quantity: 1});
// update previewed in results pane 
 

    // 3. Update the item paper to include a field rating 
        // that has the value of 4 stars and change its 
        // status to A.
db.inventory.find({item: 'paper'});
// doc with paper previewed in results pane

db.inventory.updateOne({item: 'paper'},{$set: 
    {rating: '4 stars', status: 'A'}},{upsert: true});
// field rating added and status updated for doc with paper, 
    // validated in results pane

db.inventory.find({item: 'paper'},{item: 1, rating: 1, 
    status: 1});
// updated doc previewed in results pane 


    // 4. Update all items to change the h and w fields to 
        // be height and width.
db.inventory.find({});
// preview all doc's in collection

db.inventory.updateMany({item: {$exists: true}},{$rename: 
    {'size.h': 'height', 'size.w': 'width'}});
// h and w fields renamed to height and width for all doc's 
    // with an item field, as validated in results pane

db.inventory.find({item: {$exists: true}},{item: 1, 
    height: 1, width: 1});
// all doc's with item field previewed in results pane
 

    // 5. Update the item spiral notebook so that the 
        // height and width is incremented by 2.
db.inventory.find({item: 'spiral notebook'});
// doc with spiral notebook previewed in results pane

db.inventory.updateOne({item: 'spiral notebook'},{$inc: 
    {height: 2, width: 2}});
// height and weight fields incremented by 2 each for doc 
    // with a spiral notebook, as validated in results pane

db.inventory.find({item: 'spiral notebook'},{item: 1, 
    height: 1, width: 1});
// updated doc previewed in results pane
 

    // 6. Update the items paper and day planner to multiply 
        // the height by 3.
db.inventory.find({$or: [{item: 'paper'}, 
    {item: 'day planner'}]});
// doc's with paper and day planner items previewed in 
    // results pane

db.inventory.updateOne({$or: [{item: 'paper'}, 
    {item: 'day planner'}]}, {$mul: {height: 3}});
// height multiplied x3 for doc's with paper and day 
    // planner, as validated in results pane

db.inventory.find({$or: [{item: 'paper'}, 
    {item: 'day planner'}]},{item: 1, height: 1});
// updated doc previewed in results pane



// Part 2 - For the second part, you will be working through 
    // a word problem and you will need a bit more 
    // information. Please run the following query to add 
    // documents into your inventory collection then complete 
    // the below requirements:
db.inventory.insertMany([
  {
    item: 'sticky note pads',
    size: { height: 8.9, width: 9, uom: 'cm' },
    status: 'B',
    quantity: 5
  },
  {
    item: 'pens',
    size: { height: 12, width: 1.3, uom: 'cm' },
    status: 'A',
    quantity: 4
  },
  {
    item: 'pencils',
    size: { height: 13, width: 1.4, uom: 'cm' },
    status: 'D',
    quantity: 10
  },
  {
    item: 'clipboard',
    size: { height: 13, width: 7, uom: 'in' },
    status: 'B',
    quantity: 2
  },
  {
    item: 'printer ink',
    size: { height: 2, width: 3, uom: 'in' },
    status: 'C',
    quantity: 2
  }
]);
// output: 5 doc's added to collection, as validated in
    // results pane


    // The company you are working for wants to update their 
        // inventory database. Currently, there are ten pieces 
        // of inventory in the database. They want to give 
        // each product a rating of 4 stars to start, as well 
        // as a field that shows if it has been rated yet using 
        // a boolean. They would like this to be reflected in 
        // the database as rating with two fields: 
        // numberOfStars, and hasBeenRated. Also, they want to 
        // double the quantity of every product since the 
        // company is rapidly growing. Lastly, they would like 
        // you to find all products that are sized using 
        // centimeters and give them a status of "B".

    // Step 1: give each product a 'numberOfStars' rating of 4 
        // stars to start
    // as well as a 'hasBeenRated' field that shows if it 
        // has been rated yet using a boolean
db.inventory.updateMany({},{$set: {rating: 
    {numberOfStars: '4 stars', hasBeenRated: true}}},
    {upsert: true});
// added numberOfStars with a '4 stars' value and hasBeenRated 
    // with a 'true' value to all doc's in collection

db.inventory.find({},{'rating.numberOfStars': 1, 
    'rating.hasBeenRated': 1});
// all doc's previewed in results pane


    // Step 2: double the quantity of every product
db.inventory.find({},{quantity: 1});
// quantity for all doc's previewed in results pane

db.inventory.updateMany({},{$mul: {quantity: 2}});
// quantity doubled for all doc's, as validated in results
    // pane

db.inventory.find({},{quantity: 1});
// updated quantity for all doc's previewed in results pane


    // Step 3: find all products that are sized using cm 
        // and give them a status of "B"
db.inventory.find({});
// full collection previewed

db.inventory.updateMany({'size.uom': 'cm'},{$set: 
    {status: 'B'}},{upsert: true});
// all doc's with cm size given a B status, as validated in 
    // results pane

db.inventory.find({});
// all doc's previewed in results pane